type = 'l', ylim = c(0,0.1), cex.lab = 2, cex.axis = 2,
main = rrs_filtro$estacoes_id[1],
cex.main = 5, x = c(400:899), xlab = "Wavelength", ylab = "Rrs",
col = 'red', cex.main = 1)
par(new=T)
matplot(t(rrs_filtro2[,-c(1)]),
type = 'l', ylim = c(0,0.05), cex.lab = 2, cex.axis = 2,
main = rrs_filtro2$estacoes_id[1], ylab = "Rrs",
cex.main = 5, cex.main = 1, col = 'black', x = c(400:899), xlab = "Wavelength")
}
par(mfrow=c(3,3), cex.main = 1)
for(i in 1:length(pontos)) {
rrs_filtro = resultados$rrs  %>% filter(estacoes_id == pontos[[i]])
rrs_filtro2 = rrs_calculada$rrs_mediana  %>% filter(estacoes_id == pontos[[i]])
matplot(t(rrs_filtro[,-c(1:6)]),
type = 'l', ylim = c(0,0.1), cex.lab = 2, cex.axis = 2,
main = rrs_filtro$estacoes_id[1],
cex.main = 5, x = c(400:899), xlab = "Wavelength", ylab = "Rrs",
col = 'red', cex.main = 1)
par(new=T)
matplot(t(rrs_filtro2[,-c(1)]),
type = 'l', ylim = c(0,0.1), cex.lab = 2, cex.axis = 2,
main = rrs_filtro2$estacoes_id[1], ylab = "Rrs",
cex.main = 5, cex.main = 1, col = 'black', x = c(400:899), xlab = "Wavelength")
}
par(mfrow=c(3,3), cex.main = 1)
for(i in 1:length(pontos)) {
rrs_filtro = resultados$rrs  %>% filter(estacoes_id == pontos[[i]])
rrs_filtro2 = rrs_calculada$rrs_mediana  %>% filter(estacoes_id == pontos[[i]])
matplot(t(rrs_filtro[,-c(1:6)]),
type = 'l', ylim = c(0,0.05), cex.lab = 2, cex.axis = 2,
main = rrs_filtro$estacoes_id[1],
cex.main = 5, x = c(400:899), xlab = "Wavelength", ylab = "Rrs",
col = 'red', cex.main = 1)
par(new=T)
matplot(t(rrs_filtro2[,-c(1)]),
type = 'l', ylim = c(0,0.05), cex.lab = 2, cex.axis = 2,
main = rrs_filtro2$estacoes_id[1], ylab = "Rrs",
cex.main = 5, cex.main = 1, col = 'black', x = c(400:899), xlab = "Wavelength")
}
save_path
write.csv(data.frame(id = 1, resultados$lw),     paste(save_path, sep = '/', "lw.csv"), row.names = F)
write.csv(data.frame(id = 1, resultados$ls),     paste(save_path, sep = '/', "lsky.csv"), row.names = F)
write.csv(data.frame(id = 1, resultados$es),     paste(save_path, sep = '/', "es.csv"), row.names = F)
write.csv(data.frame(id = 1, rrs_calculada$rrs_filtrada), paste(save_path, sep = '/', "rrs_completa.csv"), row.names = F)
write.csv(data.frame(id = 1, rrs_calculada$rrs_mediana), paste(save_path, sep = '/', "rrs_mediana.csv"), row.names = F)
rrs_calculada
rrs_calculada$rrs_mediana
read_sonda = function(path_sonda) {
dados = read.table(path_sonda, header=T, skip =8, sep = ',')
names(dados) = c("Date", "Phyco", "CDOM", "Chla", "Depth", "Temperature")
phyco.quanti = quantile(dados$Phyco)
CDOM.quanti = quantile(dados$CDOM)
Chla.quanti = quantile(dados$Chla)
Temperature.quanti = quantile(dados$Temperature)
dados.phyco = filter(dados, Phyco > phyco.quanti[2] & Phyco < phyco.quanti[3]) %>%
select(Phyco)  %>% as.matrix() %>% as.numeric() %>% median()
dados.CDOM = filter(dados, CDOM > CDOM.quanti[2] & CDOM < CDOM.quanti[3]) %>%
select(CDOM) %>% as.matrix() %>% as.numeric() %>% median()
dados.Chla = filter(dados, Chla > Chla.quanti[2] & Chla < Chla.quanti[3]) %>%
select(Chla) %>% as.matrix() %>% as.numeric() %>% median()
dados.Temperature = filter(dados, Temperature > Temperature.quanti[2] & Temperature < Temperature.quanti[3]) %>%
select(Temperature)  %>% as.matrix() %>% as.numeric() %>% median()
df = data.frame(Date = dados$Date[1], Phyco = dados.phyco, CDOM = dados.CDOM, Chla = dados.Chla,
Temperature = dados.Temperature)
return(df)
}
dados = list.files(path = 'F:/promissao abril 2022/Promissao 2022 Março/sonda/', full.names = T, pattern = '.csv')
dados
dados = list.files(path = 'F:/promissao abril 2022/Promissao 2022 Março/sonda/', full.names = T, pattern = '.csv')
sonda = data.frame(Ponto_endereço = dados,
Data =1 ,
Phyco=1,
CDOM=1,
Chla=1,
Temp=1)
for(i in 1:length(dados)) {
res = read_sonda(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res
}
dados
path_sonda
read.table(path_sonda, header=T, skip =8)
path_sonda
sonda$Ponto_endereço[i]
sonda$Ponto_endereço[i]
path_sonda = sonda$Ponto_endereço[i]
dados = read.table(path_sonda, header=T, skip =8)
dados = read.table(path_sonda, header=T)
dados = read.table(path_sonda)
read.delim(path_sonda)
read.delim(path_sonda, sep = '\t')
read.delim(path_sonda, skip = 8, sep = '\t')
read.delim(path_sonda, skip = 8)
read.delim(path_sonda, skip = 8, sep = ',')
read.delim(path_sonda, skip = 8, sep = ',', header=F)
dados = read.delim(path_sonda, skip = 8, sep = ',', header=F)
names(dados) = c("Date", "Phyco", "CDOM", "Chla", "Depth", "Temperature")
dados
dados = read.delim(path_sonda, skip = 8, sep = ',', header=F)
dados
dados = read.delim(path_sonda, skip = 9, sep = ',', header=F)
dados
dados.open = read.delim(path_sonda, skip = 9, sep = ',', header=F)
dados = data.frame(Date = dados.open$V1,
Phyco = dados.open$V2+dados.open$V3/1000)
dados
dados.open$V3
dados.open$V2
dados = data.frame(Date = dados.open$V1,
Phyco = dados.open$V2+dados.open$V3/100,
CDOM = dados.open$V4+dados.open$V5/100,
Chla = dados.open$V6+dados.open$V7/100,
Depth = dados.open$V8+dados.open$V9/100,
Temperature = dados.open$V10 + dados.open$V11/100)
dados
read_sonda_sem_virgula = function(path_sonda) {
dados.open = read.delim(path_sonda, skip = 9, sep = ',', header=F)
dados = data.frame(Date = dados.open$V1,
Phyco = dados.open$V2+dados.open$V3/100,
CDOM = dados.open$V4+dados.open$V5/100,
Chla = dados.open$V6+dados.open$V7/100,
Depth = dados.open$V8+dados.open$V9/100,
Temperature = dados.open$V10 + dados.open$V11/100)
names(dados) = c("Date", "Phyco", "CDOM", "Chla", "Depth", "Temperature")
phyco.quanti = quantile(dados$Phyco)
CDOM.quanti = quantile(dados$CDOM)
Chla.quanti = quantile(dados$Chla)
Temperature.quanti = quantile(dados$Temperature)
dados.phyco = filter(dados, Phyco > phyco.quanti[2] & Phyco < phyco.quanti[3]) %>%
select(Phyco)  %>% as.matrix() %>% as.numeric() %>% median()
dados.CDOM = filter(dados, CDOM > CDOM.quanti[2] & CDOM < CDOM.quanti[3]) %>%
select(CDOM) %>% as.matrix() %>% as.numeric() %>% median()
dados.Chla = filter(dados, Chla > Chla.quanti[2] & Chla < Chla.quanti[3]) %>%
select(Chla) %>% as.matrix() %>% as.numeric() %>% median()
dados.Temperature = filter(dados, Temperature > Temperature.quanti[2] & Temperature < Temperature.quanti[3]) %>%
select(Temperature)  %>% as.matrix() %>% as.numeric() %>% median()
df = data.frame(Date = dados$Date[1], Phyco = dados.phyco, CDOM = dados.CDOM, Chla = dados.Chla,
Temperature = dados.Temperature)
return(df)
}
dados = list.files(path = 'F:/promissao abril 2022/Promissao 2022 Março/sonda/', full.names = T, pattern = '.csv')
sonda = data.frame(Ponto_endereço = dados,
Data =1 ,
Phyco=1,
CDOM=1,
Chla=1,
Temp=1)
for(i in 1:length(dados)) {
res = read_sonda_sem_virgula(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res
}
sonda
dados
sonda$estacoes_id = c(" Promissao_03_2022_Ponto_01",
" Promissao_03_2022_Ponto_02",
" Promissao_03_2022_Ponto_03",
" Promissao_03_2022_Ponto_04",
" Promissao_03_2022_Ponto_05",
" Promissao_03_2022_Ponto_06",
" Promissao_03_2022_Ponto_07",
" Promissao_03_2022_Ponto_08",
" Promissao_03_2022_Ponto_09",
" Promissao_03_2022_Ponto_10",
" Promissao_03_2022_Ponto_11",
" Promissao_03_2022_Ponto_12",
" Promissao_03_2022_Ponto_13",
" Promissao_03_2022_Ponto_14",
" Promissao_03_2022_Ponto_extra01")
sonda$estacoes_id = c("Promissao_03_2022_Ponto_01",
"Promissao_03_2022_Ponto_02",
"Promissao_03_2022_Ponto_03",
"Promissao_03_2022_Ponto_04",
"Promissao_03_2022_Ponto_05",
"Promissao_03_2022_Ponto_06",
"Promissao_03_2022_Ponto_07",
"Promissao_03_2022_Ponto_08",
"Promissao_03_2022_Ponto_09",
"Promissao_03_2022_Ponto_10",
"Promissao_03_2022_Ponto_11",
"Promissao_03_2022_Ponto_12",
"Promissao_03_2022_Ponto_13",
"Promissao_03_2022_Ponto_14",
"Promissao_03_2022_Ponto_extra01")
rrs_calculada
rrs_calculada$rrs_mediana$estacoes_id = gsub(rrs_calculada$rrs_mediana$estacoes_id, pattern = " ", replacement = '')
rrs_calculada
sonda$estacoes_id = c("Promissao_03_2022_Ponto_01",
" Promissao_03_2022_Ponto_02",
" Promissao_03_2022_Ponto_03",
" Promissao_03_2022_Ponto_04",
" Promissao_03_2022_Ponto_05",
" Promissao_03_2022_Ponto_06",
" Promissao_03_2022_Ponto_07",
" Promissao_03_2022_Ponto_08",
" Promissao_03_2022_Ponto_09",
" Promissao_03_2022_Ponto_10",
" Promissao_03_2022_Ponto_11",
" Promissao_03_2022_Ponto_12",
" Promissao_03_2022_Ponto_13",
" Promissao_03_2022_Ponto_14",
" Promissao_03_2022_Ponto_extra01")
rrs_calculada$rrs_mediana
a = merge(sonda, rrs_calculada$rrs_mediana, by = 'estacoes_id')
a
sonda$estacoes_id
rrs_calculada$rrs_mediana$estacoes_id
sonda$estacoes_id = c("Promissao_04_2022_Ponto_01",
"Promissao_04_2022_Ponto_02",
"Promissao_04_2022_Ponto_03",
"Promissao_04_2022_Ponto_04",
"Promissao_04_2022_Ponto_05",
"Promissao_04_2022_Ponto_06",
"Promissao_04_2022_Ponto_07",
"Promissao_04_2022_Ponto_08",
"Promissao_04_2022_Ponto_09",
"Promissao_04_2022_Ponto_10",
"Promissao_04_2022_Ponto_11",
"Promissao_04_2022_Ponto_12",
"Promissao_04_2022_Ponto_13",
"Promissao_04_2022_Ponto_14",
"Promissao_04_2022_Ponto_extra01")
rrs_calculada$rrs_mediana
a = merge(sonda, rrs_calculada$rrs_mediana, by = 'estacoes_id')
a
a$NDCI = (a$X705 - a$X670)/(a$X705+a$X670)
a$NDPI = (a$X650 - a$X620)/(a$X650+a$X620)
plot(a$Chla~a$)
plot(a$Phyco~a$NDPI)
plot(a$Phyco~a$NDPI)
plot(a$Phyco~a$NDPI)
plot(a$Chla~a$NDPI)
plot(a$Chla~a$NDCI)
res
sonda
plot(a$Phyco~a$Chla)
i
i==3
i=3
path_sonda = sonda$Ponto_endereço[i]
dados.open = read.delim(path_sonda, skip = 9, sep = ',', header=F)
dados = data.frame(Date = dados.open$V1,
Phyco = dados.open$V2+dados.open$V3/100,
CDOM = dados.open$V4+dados.open$V5/100,
Chla = dados.open$V6+dados.open$V7/100,
Depth = dados.open$V8+dados.open$V9/100,
Temperature = dados.open$V10 + dados.open$V11/100)
names(dados) = c("Date", "Phyco", "CDOM", "Chla", "Depth", "Temperature")
dados
boxplot(dados[,-1])
boxplot(dados$Phyco)
plot(dados$Phyco~dados$Chla)
plot(dados$CDOM~dados$Chla)
plot(dados$CDOM~dados$Temperature)
sonda$Ponto_endereço[i]
res
sonda
i=4
path_sonda = sonda$Ponto_endereço[i]
dados.open = read.delim(path_sonda, skip = 9, sep = ',', header=F)
dados = data.frame(Date = dados.open$V1,
Phyco = dados.open$V2+dados.open$V3/100,
CDOM = dados.open$V4+dados.open$V5/100,
Chla = dados.open$V6+dados.open$V7/100,
Depth = dados.open$V8+dados.open$V9/100,
Temperature = dados.open$V10 + dados.open$V11/100)
names(dados) = c("Date", "Phyco", "CDOM", "Chla", "Depth", "Temperature")
plot(dados$CDOM~dados$Temperature)
plot(dados$Phyco~dados$Chla)
plot(dados$CDOM~dados$Chla)
phyco.quanti = quantile(dados$Phyco)
CDOM.quanti = quantile(dados$CDOM)
Chla.quanti = quantile(dados$Chla)
Temperature.quanti = quantile(dados$Temperature)
dados.phyco = filter(dados, Phyco > phyco.quanti[2] & Phyco < phyco.quanti[3]) %>%
select(Phyco)  %>% as.matrix() %>% as.numeric() %>% median()
dados.CDOM = filter(dados, CDOM > CDOM.quanti[2] & CDOM < CDOM.quanti[3]) %>%
select(CDOM) %>% as.matrix() %>% as.numeric() %>% median()
dados.Chla = filter(dados, Chla > Chla.quanti[2] & Chla < Chla.quanti[3]) %>%
select(Chla) %>% as.matrix() %>% as.numeric() %>% median()
dados.Temperature = filter(dados, Temperature > Temperature.quanti[2] & Temperature < Temperature.quanti[3]) %>%
select(Temperature)  %>% as.matrix() %>% as.numeric() %>% median()
dados.phyco
phyco.quanti
CDOM.quanti
Chla.quanti
Temperature.quanti
plot(a$Chla~a$NDCI)
require(ggplot2)
ggplot(a) +
geom_point(aes(x = NDCI, y = Phyco))
ggplot(a) +
geom_point(aes(x = NDCI, y = Phyco, col = estacoes_id))
result = ggplot(a) +
geom_point(aes(x = NDCI, y = Phyco, col = estacoes_id))
ggplotly(result)
a$NDCI = (a$X740 - a$X670)/(a$X770+a$X670)
a$NDCI = (a$X740 - a$X670)/(a$X740+a$X670)
plot(a$Chla~a$NDCI)
result = ggplot(a) +
geom_point(aes(x = NDCI, y = Phyco, col = estacoes_id))
ggplotly(result)
result = ggplot(a) +
geom_point(aes(x = NDPI, y = Phyco, col = estacoes_id))
ggplotly(result)
result = ggplot(a) +
geom_point(aes(x = Chla, y = Phyco, col = estacoes_id))
ggplotly(result)
result = ggplot(a) +
geom_point(aes(x = NDCI, y = Chla, col = estacoes_id))
ggplotly(result)
a$NDPI = (a$X650 - a$X620)/(a$X650+a$X620)
result = ggplot(a) +
geom_point(aes(x = NDCI, y = Chla, col = estacoes_id))
ggplotly(result)
read_sonda = function(path_sonda) {
dados = read.table(path_sonda, header=T, skip =8, sep = ',')
names(dados) = c("Date", "Phyco", "CDOM", "Chla", "Depth", "Temperature")
phyco.quanti = quantile(dados$Phyco)
CDOM.quanti = quantile(dados$CDOM)
Chla.quanti = quantile(dados$Chla)
Temperature.quanti = quantile(dados$Temperature)
dados.phyco = filter(dados, Phyco > phyco.quanti[2] & Phyco < phyco.quanti[3]) %>%
select(Phyco)  %>% as.matrix() %>% as.numeric() %>% median()
dados.CDOM = filter(dados, CDOM > CDOM.quanti[2] & CDOM < CDOM.quanti[3]) %>%
select(CDOM) %>% as.matrix() %>% as.numeric() %>% median()
dados.Chla = filter(dados, Chla > Chla.quanti[2] & Chla < Chla.quanti[3]) %>%
select(Chla) %>% as.matrix() %>% as.numeric() %>% median()
dados.Temperature = filter(dados, Temperature > Temperature.quanti[2] & Temperature < Temperature.quanti[3]) %>%
select(Temperature)  %>% as.matrix() %>% as.numeric() %>% median()
df = data.frame(Date = dados$Date[1], Phyco = dados.phyco, CDOM = dados.CDOM, Chla = dados.Chla,
Temperature = dados.Temperature)
return(df)
}
dados = list.files(path = 'F:/BONDS_2022/Sonda/', full.names = T, pattern = '.csv')
sonda = data.frame(Ponto_endereço = dados,
Data =1 ,
Phyco=1,
CDOM=1,
Chla=1,
Temp=1)
dados
for(i in 1:length(dados)) {
res = read_sonda_sem_virgula(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res
}
sonda
for(i in 1:length(dados)) {
res = read_sonda(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res
}
require(data.table)
require(dplyr)
require(tidyr)
for(i in 1:length(dados)) {
res = read_sonda(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res
}
sonda
for(i in 16:length(dados)) {
res = read_sonda(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res
}
fico = read.table("clipboard", header=T)
fico = read.table("clipboard", header=F)
sonda
sonda$Ponto_endereço
comp = sonda[c(1,4,6,7,8,9,10,11,12,13),]
comp
dim(fico)
dim(comp)
plot(fico$V2~comp$Phyco)
plot(fico$V2~comp$Phyco)
plot(fico$V2~comp$Phyco, xlim = c(0,50))
plot(fico$V2~comp$Phyco, xlim = c(0,50),ylim = c(0,10))
comp
comp = sonda[c(1,4,6,7,8,9,10,11,12),]
comp$Ponto_endereço
dim(comp)
fico$V1
sonda
comp = sonda[c(1,4,6,7,8,9,10,11,12),]
fico = read.table("clipboard", header=F)
plot(fico$V2~comp$Phyco, xlim = c(0,50),ylim = c(0,10))
plot(fico$V2~comp$Phyco)
sonda
comp
sondasd = data.frame(Ponto_endereço = dados,
Data =1 ,
Phyco=1,
CDOM=1,
Chla=1,
Temp=1)
read_sonda = function(path_sonda) {
dados = read.table(path_sonda, header=T, skip =8, sep = ',')
names(dados) = c("Date", "Phyco", "CDOM", "Chla", "Depth", "Temperature")
phyco.quanti = quantile(dados$Phyco)
CDOM.quanti = quantile(dados$CDOM)
Chla.quanti = quantile(dados$Chla)
Temperature.quanti = quantile(dados$Temperature)
dados.phyco = filter(dados, Phyco > phyco.quanti[2] & Phyco < phyco.quanti[3]) %>%
select(Phyco)  %>% as.matrix() %>% as.numeric() %>% median()
dados.CDOM = filter(dados, CDOM > CDOM.quanti[2] & CDOM < CDOM.quanti[3]) %>%
select(CDOM) %>% as.matrix() %>% as.numeric() %>% median()
dados.Chla = filter(dados, Chla > Chla.quanti[2] & Chla < Chla.quanti[3]) %>%
select(Chla) %>% as.matrix() %>% as.numeric() %>% median()
dados.Temperature = filter(dados, Temperature > Temperature.quanti[2] & Temperature < Temperature.quanti[3]) %>%
select(Temperature)  %>% as.matrix() %>% as.numeric() %>% median()
df = data.frame(Date = dados$Date[1], Phyco = dados.phyco, CDOM = dados.CDOM, Chla = dados.Chla,
Temperature = dados.Temperature)
dados.phycosd = filter(dados, Phyco > phyco.quanti[2] & Phyco < phyco.quanti[3]) %>%
select(Phyco)  %>% as.matrix() %>% as.numeric() %>% sd()
dados.CDOMsd = filter(dados, CDOM > CDOM.quanti[2] & CDOM < CDOM.quanti[3]) %>%
select(CDOM) %>% as.matrix() %>% as.numeric() %>% sd()
dados.Chlasd = filter(dados, Chla > Chla.quanti[2] & Chla < Chla.quanti[3]) %>%
select(Chla) %>% as.matrix() %>% as.numeric() %>% sd()
dados.Temperaturesd = filter(dados, Temperature > Temperature.quanti[2] & Temperature < Temperature.quanti[3]) %>%
select(Temperature)  %>% as.matrix() %>% as.numeric() %>% sd()
dfsd = data.frame(Date = dados$Date[1], Phyco = dados.phycosd, CDOM = dados.CDOMsd, Chla = dados.Chlasd,
Temperature = dados.Temperaturesd)
res = list(df, dfsd)
return(res)
}
dados = list.files(path = 'F:/BONDS_2022/Sonda/', full.names = T, pattern = '.csv')
sonda = data.frame(Ponto_endereço = dados,
Data =1 ,
Phyco=1,
CDOM=1,
Chla=1,
Temp=1)
sondasd = data.frame(Ponto_endereço = dados,
Data =1 ,
Phyco=1,
CDOM=1,
Chla=1,
Temp=1)
res = read_sonda(path_sonda = sonda$Ponto_endereço[i])
i=1
read_sonda(path_sonda = sonda$Ponto_endereço[i])
for(i in 1:length(dados)) {
res = read_sonda(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res[[1]]
sondasd[i,2:6] = res[[2]]
}
for(i in 16:length(dados)) {
res = read_sonda(path_sonda = sonda$Ponto_endereço[i])
sonda[i,2:6] = res[[1]]
sondasd[i,2:6] = res[[2]]
}
i
sonda
sonda
sonda$Ponto_endereço
comp = sonda[c(1,4,6,7,8,9,10,11,12),]
compsd = sondasd[c(1,4,6,7,8,9,10,11,12),]
plot(fico$V2~comp$Phyco)
plot(fico$V2~compsd$Phyco)
plot(fico$V2~comp$Phyco)
setwd("F:/promissao abril 2022/Promissao 2022 Março/sonda")
comp
-2E-5
SONDA_PC_ESTIMADO = -2E-5*comp$Phyco^2+0.0685*comp$Phyco+2.9096
plot(fico$V2~SONDA_PC_ESTIMADO)
abline(0,1)
require(Metrics)
mape(actual = fico$V2, predicted = SONDA_PC_ESTIMADO)
SONDA_PC_ESTIMADO = 0.0441*comp$Phyco+6.8906
plot(fico$V2~SONDA_PC_ESTIMADO)
abline(0,1)
SONDA_PC_ESTIMADO = -2E-5*comp$Phyco^2+0.0685*comp$Phyco+2.9096
plot(fico$V2~SONDA_PC_ESTIMADO, xlim = c(0,30), ylim = c(0,30))
abline(0,1)
SONDA_PC_ESTIMADO = 0.0441*comp$Phyco+6.8906
plot(fico$V2~SONDA_PC_ESTIMADO, xlim = c(0,30), ylim = c(0,30))
abline(0,1)
SONDA_PC_ESTIMADO = -2E-5*comp$Phyco^2+0.0685*comp$Phyco+2.9096
plot(fico$V2~SONDA_PC_ESTIMADO, xlim = c(0,30), ylim = c(0,30))
abline(0,1)
plot(fico$V2~SONDA_PC_ESTIMADO, xlim = c(0,30), ylim = c(0,30))
abline(0,1)
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30))
abline(0,1)
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
abline(0,1)
SONDA_PC_ESTIMADO = 0.0441*comp$Phyco+6.8906
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
abline(0,1)
SONDA_PC_ESTIMADO = -2E-5*comp$Phyco^2+0.0685*comp$Phyco+2.9096
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
abline(0,1)
SONDA_PC_ESTIMADO = -2E-5*comp$Phyco^2+0.0685*comp$Phyco
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
abline(0,1)
SONDA_PC_ESTIMADO = -2E-5*comp$Phyco^2+0.0685*comp$Phyco+2.9096
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
abline(0,1)
SONDA_PC_ESTIMADO = 16.331*lon(comp$Phyco)-95.974
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
SONDA_PC_ESTIMADO = 16.331*log(comp$Phyco)-95.974
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
SONDA_PC_ESTIMADO
SONDA_PC_ESTIMADO = 16.331*log10(comp$Phyco)-95.974
matplot(x= fico$V2, y = SONDA_PC_ESTIMADO, xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
abline(0,1)
fico
mape(actual = fico$V2[-1], predicted = SONDA_PC_ESTIMADO[-1])
SONDA_PC_ESTIMADO = -2E-5*comp$Phyco^2+0.0685*comp$Phyco+2.9096
matplot(x= fico$V2[-1], y = SONDA_PC_ESTIMADO[=1], xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
SONDA_PC_ESTIMADO[=1]
matplot(x= fico$V2[-1], y = SONDA_PC_ESTIMADO[-1], xlab = "Insitu PC", xlim = c(0,30), ylim = c(0,30), pch = 20)
abline(0,1)
mape(actual = fico$V2[-1], predicted = SONDA_PC_ESTIMADO[-1])
